import{aW as is,af as s,aX as ns,O as os,U as e,V as w,aH as rs,aY as hs,aZ as ms,a_ as gs,a$ as bs,b0 as ps,b1 as xs,b2 as Ns,b3 as us,b4 as Hs,b5 as Ts,b6 as Ls,b7 as ls,b8 as ds,b9 as fs,ba as Cs,aN as Os,bb as Ws,bc as qs,bd as vs,be as $s,bf as ys,aO as Ss,ap as Ys,aM as As,aF as js,ad as ks}from"./app-CLYCBq-A.js";class ws extends is{}const Fs=Ss('<img loading="eager" decoding="async" aria-hidden="true">'),o=class o extends s(HTMLElement,ns){constructor(){super(...arguments),this.Wm=this.nn()}onSetup(){this.a=os(),this.$state.img.set(this.Wm)}onConnect(){const{src:t,crossOrigin:a}=this.$state;this.Wm.parentNode!==this&&this.prepend(this.Wm),e(()=>{w(this.Wm,"src",t()),w(this.Wm,"crossorigin",a())})}nn(){return rs(Fs)}};o.tagName="media-thumbnail",o.attrs={crossOrigin:"crossorigin"};let p=o;const x=class x extends s(HTMLElement,hs){onConnect(){e(()=>{this.textContent=this.$state.timeText()})}};x.tagName="media-time";let F=x;const N=class N extends s(HTMLElement,ms){};N.tagName="media-airplay-button";let U=N;const u=class u extends s(HTMLElement,gs){};u.tagName="media-caption-button";let X=u;const H=class H extends s(HTMLElement,bs){};H.tagName="media-fullscreen-button";let Z=H;const T=class T extends s(HTMLElement,ps){};T.tagName="media-live-button";let z=T;const L=class L extends s(HTMLElement,xs){};L.tagName="media-mute-button";let D=L;const l=class l extends s(HTMLElement,Ns){};l.tagName="media-pip-button";let J=l;const d=class d extends s(HTMLElement,us){};d.tagName="media-play-button";let K=d;const f=class f extends s(HTMLElement,Hs){};f.tagName="media-seek-button";let Q=f;function h(n,t){Ys(()=>{if(!n.connectScope)return;const a=n.querySelector("template");a&&e(()=>{const i=n.getOptions();As(a,i.length,(c,m)=>{const{label:g,value:cs}=i[m],b=c.querySelector('[data-part="label"]');c.setAttribute("value",cs),b&&(ks(g)?b.textContent=g:e(()=>{b.textContent=g()})),t==null||t(c,i[m],m)})})})}const C=class C extends s(HTMLElement,Ts){onConnect(){h(this)}};C.tagName="media-audio-radio-group";let V=C;const O=class O extends s(HTMLElement,Ls){onConnect(){h(this)}};O.tagName="media-captions-radio-group";let I=O;const W=class W extends s(HTMLElement,ls){};W.tagName="media-menu";let R=W;const q=class q extends s(HTMLElement,is){};q.tagName="media-menu-button";let G=q;const v=class v extends s(HTMLElement,ws){};v.tagName="media-menu-item";let P=v;const $=class $ extends s(HTMLElement,ds){};$.tagName="media-menu-items";let B=$;const y=class y extends s(HTMLElement,fs){onConnect(){h(this)}};y.tagName="media-speed-radio-group";let E=y;const S=class S extends s(HTMLElement,Cs){onConnect(){h(this,(t,a)=>{const i=a.bitrate,c=t.querySelector('[data-part="bitrate"]');i&&c&&e(()=>{c.textContent=i()||""})})}};S.tagName="media-quality-radio-group";let _=S;const Y=class Y extends p{onSetup(){super.onSetup(),this.ia=Os(js.state)}onConnect(){super.onConnect(),e(this.Yh.bind(this))}Yh(){const{duration:t,clipStartTime:a}=this.a.$state;this.time=a()+this.ia.pointerRate()*t()}};Y.tagName="media-slider-thumbnail";let M=Y;const r=class r extends s(HTMLElement,Ws){onConnect(){e(()=>{this.textContent=this.getValueText()})}};r.tagName="media-slider-value",r.attrs={padMinutes:{converter:qs}};let ss=r;const A=class A extends s(HTMLElement,vs){};A.tagName="media-time-slider";let ts=A;const j=class j extends s(HTMLElement,$s){};j.tagName="media-slider-preview";let as=j;const k=class k extends s(HTMLElement,ys){};k.tagName="media-volume-slider";let es=k;export{K as M,D as a,X as b,Z as c,J as d,Q as e,U as f,es as g,ts as h,as as i,ss as j,M as k,R as l,G as m,B as n,P as o,V as p,I as q,h as r,E as s,_ as t,p as u,z as v,F as w};
